# Load libraries and set theme ----
pacman::p_load("tidyverse", "colorspace", "lubridate", "patchwork", "corrr", "reshape2", "plotly")

theme_set(theme_minimal() +
            theme(text = element_text(size = 12),
                  axis.title.x = element_text(margin = margin(20, 0, 0, 0)),
                  axis.title.y = element_text(margin = margin(0, 20, 0, 0)),
                  legend.key.size = unit(0.5, "cm"),
                  legend.text = element_text(size = 10),
                  panel.border = element_rect(color = "#E0E0E0", size = 0.5, fill = NA),
                  strip.background = element_rect(fill = "#FAFAFA", color = "#E0E0E0"),
                  panel.spacing = unit(2, "lines")))


palette_colors <- c(
  `red`         = "#F44336",
  `pink`        = "#E91E63",
  `purple`      = "#9C27B0",
  `deep purple` = "#673AB7",
  `indigo`      = "#3F51B5",
  `blue`        = "#2196F3",
  `light blue`  = "#03A9F4",
  `cyan`        = "#00BCD4",
  `teal`        = "#009688",
  `green`       = "#4CAF50",
  `light green` = "#8BC34A",
  `lime`        = "#CDDC39",
  `yellow`      = "#FFEB3B",
  `amber`       = "#FFC107",
  `orange`      = "#FF9800",
  `deep orange` = "#FF5722",
  `brown`       = "#795548",
  `grey`        = "#9E9E9E",
  `blue grey`   = "#607D8B",
  'covid' = "#00C1B2",
  'noncovid' = "#ED90A4")

# Retrieve a specific color from the palette
palette <- function(color) {
  cols <- c(color)
  if (is.null(cols)) {
    return(NA)
  } else {
    return(unname(palette_colors[color]))
  }
}

# Data import -------------
exploratory_analysis <- read_csv("./data/preprints_sortedbyratio_missingwordcountsremoved_2022_02_19.csv") 


# summary statistics ----
exploratory_analysis %>% summarise_all 

#Save summary data
summary_stats <- data.frame(unclass(summary(exploratory_analysis, na.rm=TRUE)),  # Convert summary to data frame
                           check.names = FALSE)

summary_stats %>%  write_csv("./summary_stats.csv")

# V1 of preprint ----

## Number of versions ----

p1 <- exploratory_analysis %>% 
  count(n_versions) %>% 
  filter(n > 10) %>% 
  ggplot(aes(x = n_versions, y = n, fill = factor(n_versions))) +
  geom_col() +
  labs( y ="Count", 
        x = "preprint versions", 
        title = "Preprint Versions") +
  scale_fill_manual(values = qualitative_hcl(n = 8, palette = "set2")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(legend.position = "none") #+
  ggsave("./figures/preprint_versions.png")

## Number of figs ----
  
p2 <- exploratory_analysis %>% 
    count(n_figs_v1) %>% 
  #  filter(n > 10) %>% 
    ggplot(aes(x = n_figs_v1, y = n, fill = factor(n_figs_v1))) +
    geom_col() +
    labs( y ="Count", 
          x = "preprint figures", 
          title = "Preprint figure count (v1)") +
    scale_fill_manual(values = qualitative_hcl(n = 41, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
    ggsave("./figures/preprint_figs_v1.png")
  
# Number of words
  
exploratory_analysis %>% 
    count(n_words_v1) %>% 
  #  filter(n > 12000) %>% 
    ggplot(aes(x = n_words_v1, y = n, fill = factor(n_words_v1))) +
    geom_col() +
    labs( y ="Count", 
          x = "preprint words", 
          title = "Preprint word count (V1)") +
    scale_fill_manual(values = qualitative_hcl(n = 5630, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
    ggsave("./figures/preprint_words_v1.png")


p3 <- exploratory_analysis %>%   
  mutate(words_v1_bin = cut(n_words_v1, breaks=30)) %>% 
  count(words_v1_bin) %>% 
  ggplot(aes(x = words_v1_bin, y = n, fill = factor(words_v1_bin))) +
  geom_col() +
  labs( y ="Count", 
        x = "preprint words (binned)", 
        title = "Preprint word count (V1)") +
  scale_fill_manual(values = qualitative_hcl(n = 30, palette = "set2")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(legend.position = "none") #+
ggsave("./figures/preprint_words_v1_bin.png")
    
    
# Number of tables
    
p4<- exploratory_analysis %>% 
      count(n_tables_v1) %>% 
      filter(n > 20) %>% 
      ggplot(aes(x = n_tables_v1, y = n, fill = factor(n_tables_v1))) +
      geom_col() +
      labs( y ="Count (>20)", 
            x = "preprint table count", 
            title = "Preprint table count (V1)") +
      scale_fill_manual(values = qualitative_hcl(n = 10, palette = "set2")) +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
      theme(plot.title = element_text(hjust = 0.5)) +
      theme(legend.position = "none") #+
    ggsave("./figures/preprint_tables.png")
    
p5<- exploratory_analysis %>% 
      count(n_refs_v1) %>% 
  #    filter(n > 20) %>% 
      ggplot(aes(x = n_refs_v1, y = n, fill = factor(n_refs_v1))) +
      geom_col() +
      labs( y ="Count", 
            x = "preprint reference count", 
            title = "Preprint reference count (V1))") +
      scale_fill_manual(values = qualitative_hcl(n = 174, palette = "set2")) +
      theme_minimal() +
      theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
      theme(plot.title = element_text(hjust = 0.5)) +
      theme(legend.position = "none") #+
    ggsave("./figures/preprint_refs_v1.png")    
    
# Final version of preprint ----
    
# Number of figs
    
p6<- exploratory_analysis %>% 
    count(n_figs_vlast) %>% 
  #  filter(n > 10) %>% 
  ggplot(aes(x = n_figs_vlast, y = n, fill = factor(n_figs_vlast))) +
    geom_col() +
    labs( y ="Count", 
          x = "preprint figure count", 
          title = "Preprint figure count (last version)") +
    scale_fill_manual(values = qualitative_hcl(n = 56, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
    ggsave("./figures/preprint_figs_vlast.png")
    
  # Number of words
    
exploratory_analysis %>% 
    count(n_words_vlast) %>% 
    filter(n > 12000) %>% 
    ggplot(aes(x = n_words_vlast, y = n, fill = factor(n_words_vlast))) +
    geom_col() +
    labs( y ="Count (n>12000)", 
          x = "preprint word count", 
          title = "Preprint word count (last version)") +
    scale_fill_manual(values = qualitative_hcl(n = 41, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
    ggsave("./figures/preprint_versions.png")
   
p7<- 
  exploratory_analysis %>%   
    mutate(words_vlast_bin = cut(n_words_vlast, breaks=30)) %>% 
    count(words_vlast_bin) %>% view()
    ggplot(aes(x = words_vlast_bin, y = n, fill = factor(words_vlast_bin))) +
    geom_col() +
    labs( y ="Count", 
          x = "preprint words (binned)", 
          title = "Preprint word count (final version)") +
    scale_fill_manual(values = qualitative_hcl(n = 30, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
    ggsave("./figures/preprint_words_vlast_bin.png")
     
   # Number of tables
    
p8<- exploratory_analysis %>% 
  count(n_tables_vlast) %>% 
  filter(n > 20) %>% 
  ggplot(aes(x = n_tables_vlast, y = n, fill = factor(n_tables_vlast))) +
  geom_col() +
  labs( y ="Count (>20)", 
        x = "preprint table count", 
        title = "Preprint table count (last version))") +
  scale_fill_manual(values = qualitative_hcl(n = 12, palette = "set2")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(legend.position = "none") #+
  ggsave("./figures/preprint_tables_vlast.png")
  
p9<- exploratory_analysis %>% 
    count(n_refs_vlast) %>% 
    #    filter(n > 20) %>% 
    ggplot(aes(x = n_refs_vlast, y = n, fill = factor(n_refs_vlast))) +
    geom_col() +
    labs( y ="Count", 
          x = "preprint reference count", 
          title = "Preprint reference count (final version)") +
    scale_fill_manual(values = qualitative_hcl(n = 206, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
  ggsave("./figures/preprint_refs_vlast.png")   
    
# Patchwork

  p <-  p1+p2+p3+p4+p5+p6+p7+p8+p9+
    plot_layout(ncol = 2, guides = 'collect') + 
    plot_annotation(tag_levels = "A") & theme(legend.position = 'none')
  
  p + ggsave("./figures/Figure.png", width = 10, height = 10)


# Difference between v1 and vlast ----
  
exploratory_analysis %>% 
  mutate(word_difference = n_words_vlast - n_words_v1) %>%
    count(word_difference) %>% 
    filter(n > 1) %>% 
    ggplot(aes(x = word_difference, y = n, fill = factor(word_difference))) +
    geom_col() +
    labs( y ="Count (n>1)", 
          x = "preprint word difference (final-v1)", 
          title = "Preprint word changes") +
    scale_fill_manual(values = qualitative_hcl(n = 3745, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
  ggsave("./figures/preprint_word_diff.png")  
  
exploratory_analysis %>% 
    mutate(fig_difference = n_figs_vlast - n_figs_v1) %>%
    count(fig_difference) %>% 
   # filter(n > 1) %>% 
    ggplot(aes(x = fig_difference, y = n, fill = factor(fig_difference))) +
    geom_col() +
    labs( y ="Count (n>1)", 
          x = "preprint fig difference (final-v1)", 
          title = "Preprint fig changes") +
    scale_fill_manual(values = qualitative_hcl(n = 68, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
  ggsave("./figures/preprint_fig_diff.png")  
  
exploratory_analysis %>% 
    mutate(table_difference = n_tables_vlast - n_tables_v1) %>%
    count(table_difference) %>% 
   # filter(n > 1) %>% 
    ggplot(aes(x = table_difference, y = n, fill = factor(table_difference))) +
    geom_col() +
    labs( y ="Count (n>1)", 
          x = "preprint tables difference (final-v1)", 
          title = "Preprint table changes") +
    scale_fill_manual(values = qualitative_hcl(n = 51, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
  ggsave("./figures/preprint_table_diff.png") 
  
# combine figs and tables and calculate changes ----
plot_bar <- exploratory_analysis %>% 
    mutate(table_figs_v1 = n_figs_v1 + n_tables_v1,
           table_figs_vlast = n_figs_vlast + n_tables_vlast,
           table_fig_difference = table_figs_vlast - table_figs_v1) %>%
    count(table_fig_difference) %>% 
   # filter(n > 1) %>% # to make the grpah more readable by removing extremes
    ggplot(aes(x = table_fig_difference, y = n, fill = factor(table_fig_difference))) +
    geom_col() +
    labs( y ="Count (n>1)", 
          x = "preprint fig/table difference (final-v1)", 
          title = "Combinbed figs and tables changes between v1 and vlast") +
    scale_fill_manual(values = qualitative_hcl(n = 79, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
    theme(legend.position = "none") #+
  ggsave("./figures/preprint_table_fig_diff.png")  
  
# Make interactive 
  ggplotly(plot_bar)
  
## Scatterplot words v figs/tables ----
  #plot_scatter <- 
    exploratory_analysis %>% 
    mutate(table_figs_v1 = n_figs_v1 + n_tables_v1,
           table_figs_vlast = n_figs_vlast + n_tables_vlast,
           table_fig_difference = table_figs_vlast - table_figs_v1,
           word_difference = n_words_vlast - n_words_v1) %>% 
    filter(word_difference <15000,
           table_fig_difference <75) %>% 
  ggplot(aes(x = table_fig_difference, y = word_difference, text = doi, color = doi)) +
  geom_point(alpha=0.5) +
  labs( y ="Wrod count difference (vlast-v1)", 
        x = "fig/table difference (final-v1)", 
        title = "Combinbed figs and tables changes between v1 and vlast") +
 #scale_fill_manual(values = qualitative_hcl(n = 79, palette = "set2")) +
  scale_fill_continuous(type = "viridis") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(legend.position = "none") #+
ggsave("./figures/preprint_table_fig_diff.png")  


# Make interactive 
ggplotly(plot_scatter, hoverinfo = text)

## 2D bin plot -----
plot <-   exploratory_analysis %>% 
  mutate(table_figs_v1 = n_figs_v1 + n_tables_v1,
         table_figs_vlast = n_figs_vlast + n_tables_vlast,
         table_fig_difference = table_figs_vlast - table_figs_v1,
         word_difference = n_words_vlast - n_words_v1) %>% 
  filter(word_difference <15000,
         table_fig_difference <75) %>% 
  ggplot(aes(x = table_fig_difference, y = word_difference)) +
  geom_bin2d(alpha=0.5, bins = 100) +
  labs( y ="Wrod count difference (vlast-v1)", 
        x = "fig/table difference (vlast-v1)", 
        title = "Combinbed figs and tables changes between v1 and vlast") +
  #scale_fill_manual(values = qualitative_hcl(n = 79, palette = "set2")) +
  scale_fill_continuous(type = "viridis") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  theme(plot.title = element_text(hjust = 0.5)) +
  theme(legend.position = "none") #+
ggsave("./figures/preprint_scatter_diff.png")  

# Make interactive 
ggplotly(plot)
ggplotly(plot, tooltip = "text")
  
## Density plot  ----
  
exploratory_analysis %>% 
  select(doi, n_figs_v1, n_figs_vlast) %>% 
  melt(value.name="figs") %>% 
   # count(n_figs_v1) %>% 
    #  filter(n > 10) %>% 
    ggplot(aes(x = figs, fill = variable)) +
    geom_density(alpha = 0.5) +
    labs( y ="Count", 
          x = "preprint figures", 
          title = "Preprint figure count (v1)") +
 #   scale_fill_manual(values = qualitative_hcl(n = 41, palette = "set2")) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    theme(plot.title = element_text(hjust = 0.5)) +
     theme(
      legend.position = c(.95,.95),
      legend.justification = c("right", "top"),
      legend.box.just = "right",
      legend.margin = margin(4, 4, 4, 4)) #+
  ggsave("./figures/preprint_figs_v1.png")
  
